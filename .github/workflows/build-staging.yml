name: Build and Test Maven Project with Docker to Staging Tag

on:
  push:
    branches: ["develop"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up JDK (for Maven)
      - name: Set up JDK 11 (Temurin)
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "11"

      # Install Maven
      - name: Set up Maven
        run: |
          sudo apt-get install -y maven

      # Step 3: Set up Docker (for image building)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 4: initialize required variables
      - name: Build, tag, and push docker image to Docker Hub
        env:
          REGISTRY: ${{ secrets.DOCKER_USERNAME }}
          REPOSITORY: ${{ github.repository }}
          IMAGE_TAG: ${{ github.sha }}
        run: make docker-build-push-dev

      # Step 5: Cache Maven dependencies (optional but helps with faster builds)
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 6: Validate the Maven project (check for any errors)
      - name: Validate Maven Project
        run: mvn clean verify -DskipTests=true

      # Step 7: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 8: Build and push the Docker image with github.sha as the tag
      - name: Build and push Docker image
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
